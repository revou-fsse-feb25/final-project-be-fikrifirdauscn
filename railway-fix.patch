--- a/src/main.ts
+++ b/src/main.ts
@@ -1,24 +1,31 @@
 import { NestFactory } from '@nestjs/core';
 import { AppModule } from './app.module';
-import { ValidationPipe } from '@nestjs/common'; 
+import { ValidationPipe } from '@nestjs/common';
 
 async function bootstrap() {
   const app = await NestFactory.create(AppModule);
 
-  
   app.useGlobalPipes(new ValidationPipe({
     whitelist: true,
     forbidNonWhitelisted: true,
-    transform: true, 
+    transform: true,
   }));
 
-  
+  // Allow multiple origins from env, fallback to localhost for dev
+  const origins = (process.env.FRONTEND_ORIGINS || 'http://localhost:3001')
+    .split(',')
+    .map(o => o.trim())
+    .filter(Boolean);
+
   app.enableCors({
-    origin: 'http://localhost:3001', 
+    origin: origins,
     methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',
     credentials: true,
   });
 
-  await app.listen(3000); 
+  const port = parseInt(process.env.PORT || '3000', 10);
+  await app.listen(port, '0.0.0.0');
+  // eslint-disable-next-line no-console
+  console.log(`Server listening on http://0.0.0.0:${port}`);
 }
-bootstrap();+bootstrap();
--- a/package.json
+++ b/package.json
@@ -8,10 +8,10 @@
   "scripts": {
     "build": "nest build",
     "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
-    "start": "nest start",
+    "start": "node dist/src/main.js",
     "start:dev": "nest start --watch",
     "start:debug": "nest start --debug --watch",
-    "start:prod": "node dist/src/main",
+    "start:prod": "node dist/src/main.js",
     "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
     "test": "jest",
     "test:watch": "jest --watch",
@@ -19,7 +19,8 @@
     "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
     "test:e2e": "jest --config ./test/jest-e2e.json",
     "seed": "ts-node prisma/seed.ts",
-    "start:railway": "sh ./start-prod.sh"
+    "start:railway": "sh ./start-prod.sh",
+    "postinstall": "prisma generate"
   },
   "dependencies": {
     "@nestjs/common": "^11.0.1",
@@ -82,5 +83,8 @@
     ],
     "coverageDirectory": "../coverage",
     "testEnvironment": "node"
+  },
+  "engines": {
+    "node": "20.x"
   }
-}+}
--- a/start-prod.sh
+++ b/start-prod.sh
@@ -1,3 +1,11 @@
 #!/bin/bash
+set -euo pipefail
+
+# Generate Prisma Client (safety in case postinstall skipped)
+npx prisma generate
+
+# Run migrations on the attached database
 npx prisma migrate deploy
-npm run start:prod+
+# Start the compiled Nest app
+node dist/src/main.js
--- a/src/app.controller.ts
+++ b/src/app.controller.ts
@@ -3,6 +3,9 @@
 
 @Controller()
 export class AppController {
+  @Get('health')
+  health(): string { return 'ok'; }
+
   constructor(private readonly appService: AppService) {}
 
   @Get()
